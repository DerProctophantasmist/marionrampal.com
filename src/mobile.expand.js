// Generated by CoffeeScript 2.5.1
(function() {
  module.exports = 'mobile.expand';

  require('angular').module('mobile.expand', [require('angular-aside'), require('./states'), require('angular-marked'), require('./markdownEditor')]).factory('MobileExpand', [
    '$uibModal',
    'State',
    'marked',
    '$compile',
    function($uibModal,
    State,
    marked,
    $compile) {
      var mobileExpand,
    window;
      window = null;
      mobileExpand = {
        refresh: function() {
          return {};
        },
        open: function(content,
    popupLinks,
    classes) {
          if (window !== null) {
            console.log("trying to open mobile expand window while it already is");
            return window;
          }
          window = $uibModal.open({
            windowTemplateUrl: 'templates/modalExpand.html',
            templateUrl: 'templates/mobileExpand.html',
            backdrop: true,
            // size: 'fs',
            controller: [
              '$scope',
              '$uibModalInstance',
              'Sections',
              'MarkdownEditor',
              function($scope,
              $uibModalInstance,
              Sections,
              MarkdownEditor) {
                mobileExpand.refresh = function() {
                  return $scope.$apply();
                };
                // onCloseEditor = () =>
                //   content.editor.off('fileChange',onEdit)
                //   content.editor.off('onClose', onClose)
                this.title = 'Mobile Content';
                State.hideMainContent(true);
                this.ok = function(e) {
                  $uibModalInstance.close();
                  if (e) {
                    return e.stopPropagation();
                  }
                };
                this.cancel = function(e) {
                  $uibModalInstance.dismiss();
                  if (e) {
                    return e.stopPropagation();
                  }
                };
                this.edit = function(content) {
                  // DataFile.read(filename, fileCallbacks, $scope)  if !content.data
                  // we are not actually using the editor reference, otherwise set
                  // content.editor = 
                  return MarkdownEditor.open(content.localizedFilename,
              content.data);
                };
                
                // content.editor.on('fileChange', onEdit)
                // content.editor.on('close', onCloseEditor)
                // make some stuff accessible to the template, via the scope:
                $scope.content = content;
                //this is for the editor: should we show it?
                $scope.globalState = State;
                $scope.popupLinks = popupLinks;
                return this;
              }
            ],
            controllerAs: 'MobileContentCtrl',
            windowTopClass: 'style2 white',
            windowClass: 'expanded-content'
          });
          window.result.then((function() {
            console.log('Closed window');
            State.hideMainContent(false);
            return window = null;
          }),
    (function() {
            console.log('Dismissed window');
            State.hideMainContent(false);
            return window = null;
          }));
          return window.result;
        },
        isOpen: function() {
          return window !== null;
        },
        close: function() {
          if (window === null) {
            console.log("trying to close main window while not open");
            return;
          }
          return window.close();
        },
        dismiss: function() {
          if (window === null) {
            console.log("trying to dismiss main window while not open");
            return;
          }
          return window.dismiss();
        }
      };
      return mobileExpand;
    }
  ]);

}).call(this);

//# sourceMappingURL=mobile.expand.js.map
