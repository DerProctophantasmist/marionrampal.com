// Generated by CoffeeScript 1.12.6
(function() {
  var Config, attributeString, resourceUrl,
    hasProp = {}.hasOwnProperty;

  module.exports = 'oEmbed';

  Config = require('./config.data.js');

  attributeString = function(object) {
    var key, ret, value;
    ret = " ";
    for (key in object) {
      if (!hasProp.call(object, key)) continue;
      value = object[key];
      ret += key + '="' + value.replace(/"/g, "&quote;") + '" ';
    }
    return ret;
  };

  resourceUrl = function(url) {
    var height, parameters, playlist, protocol, provider, res, videoID;
    provider = url.match(/https?:\/\/(?:[^.\/]+\.)?([^.\/]+(?:\.[^.\/]+)+)/);
    res = false;
    if (provider) {
      switch (provider[1]) {
        case 'soundcloud.com':
          height = url.indexOf('/sets/') !== -1 ? 305 : 110;
          res = {
            request: "http://soundcloud.com/oembed?type=json&visual=false&maxheight=" + height + "&color=000000&show_comments=false&show_artwork=true&url=" + url,
            provider: "soundcloud"
          };
          break;
        case 'youtu.be':
        case 'youtube.com':
          parameters = url.match(/([a-z\:\/]*\/\/)(?:www\.)?(?:youtube(?:-nocookie)?\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})(?:&amp;index=[0-9]+)?(?:&amp;list=)?([a-zA-Z0-9_-]{34})?/);
          if (parameters) {
            playlist = parameters[3] ? parameters[3] : Config.defaultYoutubePlaylist;
            videoID = parameters[2];
            protocol = parameters[1];
          }
          res = {
            request: "https://www.googleapis.com/youtube/v3/videos?part=snippet&id=" + videoID + "&fields=items(snippet(thumbnails(medium(url))))&key=" + Config.googleApiKey,
            provider: "youtube",
            playlist: playlist,
            videoID: videoID,
            protocol: protocol
          };
          break;
        case 'vimeo.com':
          res = {
            request: "https://vimeo.com/api/oembed.json?autoplay=true&autopause=true&portrait=false&color=white&url=" + url,
            provider: 'vimeo'
          };
          break;
        case 'fnac.com':
          res = {
            html: '<a href="' + url + '" /><span class="icon-fnac"></span></a>'
          };
          break;
        case 'qobuz.com':
          res = {
            html: '<a href="' + url + '" /><span class="icon-qobuz"></span></a>'
          };
          break;
        case 'spotify.com':
          res = {
            html: '<a href="' + url + '" /><span class="icon-spotify"></span></a>'
          };
          break;
        case 'amazon.com':
        case 'amazon.co.uk':
        case 'amazon.de':
        case 'amazon.fr':
        case 'amazon.be':
          res = {
            html: '<a href="' + url + '" /><span class="icon-amazon"></span></a>'
          };
      }
    }
    if (res) {
      res.url = url;
    }
    return res;
  };

  require('angular').module('oEmbed', ['config']).constant('OEmbedUrl', function(url) {
    var res;
    res = resourceUrl(url);
    if (res && !res.html) {
      res.html = '<o-embed' + attributeString(res) + '></o-embed>';
    }
    return res;
  }).factory('oEmbed', [
    '$http', '$sce', function($http, $sce) {
      var confs, load;
      confs = {};
      load = function(url, callback, resource) {
        if ((resource != null ? resource : resource = resourceUrl(url))) {
          $http.get(resource.request).then(function(response) {
            var thumbnail_url;
            if (response.data.type === 'image') {
              response.data.html = '<img class="image fit" src="' + response.data.src + '"></img>';
            }
            switch (resource.provider) {
              case 'soundcloud':
                response.data.html = response.data.html.replace('visual=true&', '');
                break;
              case 'vimeo':
                response.data.html = '<a popup-link="video" class="image half centered popup-link" data-url="' + url + '"><img src="' + response.data.thumbnail_url + '" /><span class="play-button"></span></a>';
                response.data.compile = true;
                break;
              case 'youtube':
                thumbnail_url = response.data.items[0].snippet.thumbnails.medium.url;
                response.data.html = '<a popup-link="video" class="image half centered popup-link" data-url="https://www.youtube.com/watch?v=' + resource.videoID + '" content-settings="{&quot;list&quot;:&quot;' + resource.playlist + '&quot;}"><img src="' + thumbnail_url + '" /><span class="play-button"></span></a>';
                response.data.compile = true;
            }
            confs[url] = response.data;
            return callback(response.data);
          }, function(response) {
            return console.log('Could not load ' + url + ' : ' + JSON.stringify(response));
          });
          return true;
        } else {
          return false;
        }
      };
      return function(url, callback) {
        if (!confs[url]) {
          return load(url, callback);
        } else {
          callback(confs[url]);
          return true;
        }
      };
    }
  ]).directive('oEmbed', [
    'oEmbed', '$compile', function(oEmbed, $compile) {
      return {
        restrict: 'E',
        scope: {
          'url': '@'
        },
        replace: true,
        link: function(scope, elt, attrs) {
          var res;
          scope.popupLinks = scope.$parent.popupLinks;
          if ((attrs.request != null) && (attrs.provider != null)) {
            res = attrs;
          }
          return scope.$watch('url', function() {
            oEmbed(scope.url, function(response) {
              if (response.compile) {
                return elt.append($compile(response.html)(scope.$new(false)));
              } else {
                return elt.append(response.html);
              }
            }, res);
          });
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=oEmbed.js.map
