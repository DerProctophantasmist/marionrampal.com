// Generated by CoffeeScript 2.5.1
(function() {
  module.exports = 'oEmbed';

  //we actually accept all resources based on domain, not just oEmbed, for *.fnac.com for instance, we generate the html to include directly
  //whereas for real oEmbed, we query the endpoint through the <o-embed directive> (note that for youtube we use the youtube API main reason 
  //being their oEmbed doesn't implement CORS!)
  require('angular').module('oEmbed', ['config']).constant('EmbedUrl', require('./resourceUrl').embedUrl).factory('oEmbed', [
    '$http',
    '$sce',
    function($http,
    $sce) {
      var confs,
    load,
    resourceUrl;
      confs = {};
      resourceUrl = require('./resourceUrl').resourceUrl;
      load = function(url,
    callback,
    resource) {
        var headers,
    ref;
        if ((resource != null ? resource : resource = resourceUrl(url))) {
          headers = [];
          if ((ref = resource.provider) === 'youtube') {
            headers['Cache-Control'] = 'no-cache';
          } else if (resource.provider === 'soundcloud') {
            headers['Cache-Control'] = void 0;
            headers["Content-Type"] = "text/plain";
          } else if (resource.provider === "vimeo") {
            headers['Cache-Control'] = void 0;
          }
          $http({
            method: 'get',
            url: resource.request,
            'headers': headers
          }).then(function(response) {
            var thumbnail_url;
            if (response.data.type === 'image') {
              response.data.html = '<img class="image fit" src="' + response.data.src + '"></img>';
            }
            switch (resource.provider) {
              case 'soundcloud':
                //fucking soundcloud!
                response.data.html = response.data.html.replace('visual=true&',
    '');
                break;
              case 'vimeo':
                response.data.html = '<a popup-link="video" class="image half centered popup-link" data-url="' + url + '"><img src="' + response.data.thumbnail_url + '" /><span class="play-button"></span></a>';
                response.data.compile = true;
                break;
              case 'youtube':
                if (response.data.items.length === 0) {
                  console.log("BEWARE: the youtube video: " + resource.url + " is probably private. It won't be rendered.");
                } else {
                  thumbnail_url = response.data.items[0].snippet.thumbnails.medium.url;
                  response.data.html = '<a popup-link="video" class="image half centered popup-link" data-url="https://www.youtube.com/watch?v=' + resource.videoID + '" content-settings="{&quot;list&quot;:&quot;' + resource.playlist + '&quot;}"><img src="' + thumbnail_url + '" /><span class="play-button"></span></a>';
                  response.data.compile = true;
                }
            }
            confs[url] = response.data;
            return callback(response.data);
          },
    function(response) {
            return console.log('Could not load ' + url + ' : ' + JSON.stringify(response));
          });
          return true;
        } else {
          return false;
        }
      };
      return function(url,
    callback) {
        if (!confs[url]) {
          return load(url,
    callback);
        } else {
          callback(confs[url]);
          return true;
        }
      };
    }
  ]).directive('oEmbed', [
    'oEmbed',
    '$compile',
    function(oEmbed,
    $compile) {
      return {
        restrict: 'E',
        scope: {
          'url': '@'
        },
        replace: true,
        link: function(scope,
    elt,
    attrs) {
          var res;
          scope.popupLinks = scope.$parent.popupLinks;
          if ((attrs.request != null) && (attrs.provider != null)) {
            res = attrs;
          }
          return scope.$watch('url',
    function() {
            oEmbed(scope.url,
    function(response) {
              if (response.compile) {
                return elt.append($compile(response.html)(scope.$new(false)));
              } else {
                return elt.append(response.html);
              }
            },
    res);
          });
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=oEmbed.js.map
