// Generated by CoffeeScript 1.12.6
(function() {
  module.exports = 'menu';

  require('angular').module('menu', [require('angular-aside'), require('./states')]).factory('Menu', [
    '$aside', function($aside) {
      var menu;
      menu = null;
      return {
        open: function() {
          if (menu !== null) {
            console.log("trying to open main menu while it already is");
            return menu;
          }
          menu = $aside.open({
            templateUrl: '/templates/menu.html',
            placement: 'right',
            windowClass: 'main-menu',
            backdrop: true,
            controller: [
              '$scope', '$uibModalInstance', 'Sections', 'State', function($scope, $uibModalInstance, Sections, State) {
                State.home();
                this.title = 'Menu';
                this.ok = function(e) {
                  $uibModalInstance.close();
                  if (e) {
                    return e.stopPropagation();
                  }
                };
                this.cancel = function(e) {
                  $uibModalInstance.dismiss();
                  if (e) {
                    return e.stopPropagation();
                  }
                };
                this.sections = Sections.data;
                return this;
              }
            ],
            controllerAs: 'MenuCtrl'
          });
          menu.result.then((function() {
            console.log('Closed menu');
            return menu = null;
          }), (function() {
            console.log('Dismissed menu');
            return menu = null;
          }));
          return menu.result;
        },
        isOpen: function() {
          return menu !== null;
        },
        close: function() {
          if (menu === null) {
            console.log("trying to close main menu while not open");
            return;
          }
          return menu.close();
        },
        dismiss: function() {
          if (menu === null) {
            console.log("trying to dismiss main menu while not open");
            return;
          }
          return menu.dismiss();
        }
      };
    }
  ]).directive("mainMenu", [
    'Menu', function(Menu) {
      return {
        restrict: 'A',
        scope: false,
        replace: false,
        link: function(scope, elt, attrs) {
          return elt.on('click', function() {
            return Menu.open().then((function() {
              return console.log(' Closed menu 2');
            }), function() {
              return console.log(' Dismissed menu 2');
            });
          });
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=menu.js.map
