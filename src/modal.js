// Generated by CoffeeScript 2.5.1
(function() {
  var adminCommand, baseParams, makeMenu;

  module.exports = 'menu';

  baseParams = {
    windowClass: 'main-menu',
    backdrop: true,
    controller: [
      '$scope',
      '$uibModalInstance',
      'Sections',
      'State',
      '$http',
      function($scope,
      $uibModalInstance,
      Sections,
      State,
      $http) {
        //on opening the menu we navigate back to the home state, so that all "pages" are available.
        State.home();
        this.title = 'Menu';
        this.ok = function(e) {
          $uibModalInstance.close();
          if (e) {
            return e.stopPropagation();
          }
        };
        this.cancel = function(e) {
          $uibModalInstance.dismiss();
          if (e) {
            return e.stopPropagation();
          }
        };
        this.sections = Sections.data;
        this.showAdmin = State.getAllowEdit;
        if (State.getAllowEdit()) {
          this.adminCommit = adminCommand.bind(this,
      $http,
      './commit',
      'Successfully commited changes',
      'Error, changes where not commited.',
      (err) => {
            return this.ok();
          });
          this.adminUnstage = adminCommand.bind(this,
      $http,
      './unstage',
      'Successfully unstaged changes',
      'Error, changes where not unstaged.',
      (err) => {
            if (err) {
              return this.ok();
            } else {
              return window.location.reload();
            }
          });
        }
        return this;
      }
    ],
    controllerAs: 'MenuCtrl'
  };

  adminCommand = function($http, url, msgSuccess, msgError, callback) {
    return $http.post(url, "").then(function(res) {
      alert(msgSuccess);
      return callback();
    }, function(res) {
      alert(msgError) + "\n" + res.data.txt;
      return callback(new Error(res.data.txt));
    });
  };

  makeMenu = function() {
    return function($aside) {
      var menu;
      menu = null;
      return {
        open: function(params) { //params is an object must include placement and template or templateUrl 
          if (menu !== null) {
            console.log("trying to open main menu while it already is");
            return menu;
          }
          menu = $aside.open({...baseParams, ...params});
          menu.result.then((function() {
            console.log('Closed menu');
            return menu = null;
          }), (function() {
            console.log('Dismissed menu');
            return menu = null;
          }));
          return menu.result;
        },
        isOpen: function() {
          return menu !== null;
        },
        close: function() {
          if (menu === null) {
            console.log("trying to close main menu while not open");
            return;
          }
          return menu.close();
        },
        dismiss: function() {
          if (menu === null) {
            console.log("trying to dismiss main menu while not open");
            return;
          }
          return menu.dismiss();
        }
      };
    };
  };

  require('angular').module('menu', [require('angular-aside'), require('./states')]).factory('Menu', ['$aside', makeMenu()]).directive("mainMenu", [
    'Menu',
    function(Menu) {
      return {
        restrict: 'A',
        scope: false,
        replace: false,
        link: function(scope,
    elt,
    attrs) {
          return elt.on('click',
    function() {
            return Menu.open({
              placement: 'right',
              templateUrl: 'templates/menu.html'
            }).then((function() {
              return console.log(' Closed menu 2');
            }),
    function() {
              return console.log(' Dismissed menu 2');
            });
          });
        }
      };
    }
  ]).factory('LeftAside', ['$aside', makeMenu()]).directive("leftAside", [
    'LeftAside',
    function(Menu) {
      return {
        restrict: 'A',
        scope: false,
        replace: false,
        link: function(scope,
    elt,
    attrs) {
          return elt.on('click',
    function() {
            return Menu.open({
              placement: 'left',
              template: '<div class="sidebar menu" style="height:100%;width:100%" marked compile=true filename="\'' + attrs.mdfile + '\'"></div>'
            }).then((function() {
              return console.log(' Closed ' + attrs.mdfile);
            }),
    function() {
              return console.log(' Dismissed' + attrs.mdfile);
            });
          });
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=modal.js.map
