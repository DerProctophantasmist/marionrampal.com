// Generated by CoffeeScript 1.12.6
(function() {
  var debounce;

  module.exports = 'scrolling';

  require('angular-inview');

  debounce = require('debounce');

  require('angular').module('scrolling', ['angular-inview', require('angular-scroll')]).run([
    '$window', '$document', '$rootScope', function($window, $document, $rootScope) {
      var adjust;
      adjust = function(article) {
        var articleHeight, articleRect, duration, elt, offset, offsetBottom, top, windowsHeight;
        elt = article[0];
        articleRect = elt.getBoundingClientRect();
        articleHeight = articleRect.bottom - articleRect.top;
        top = $document.scrollTop();
        offset = articleRect.top;
        windowsHeight = $window.innerHeight;
        if (articleHeight > windowsHeight) {
          offsetBottom = articleRect.bottom - windowsHeight;
          if (Math.abs(offset) > Math.abs(offsetBottom)) {
            offset = offsetBottom;
          }
        }
        if (offset > -windowsHeight / 2 && (article.hasClass('full-gravity') ? offset < windowsHeight / 2 : offset < windowsHeight / 10)) {
          duration = Math.min(Math.abs(offset) * 10, 750);
          return $document.scrollTop(top + offset, duration);
        }
      };
      return angular.element($window).on("scroll", function() {
        return $rootScope.$apply(function() {});
      });
    }
  ]).factory('Activate', [
    'Sections', '$window', '$document', function(Sections, $window, $document) {
      return {
        page: function(isInView, page, info) {
          var event;
          event = info.event;
          if (info.changed) {
            page.active = isInView;
            if (isInView && (page.previous === null || !page.previous.active)) {
              Sections.topPage = page;
              console.log(Sections.topPage.section.getname());
            }
          }
          if (!isInView) {
            if (Sections.topPage === page && page.next.active) {
              return Sections.topPage = page.next;
            }
          }
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=scrolling.js.map
